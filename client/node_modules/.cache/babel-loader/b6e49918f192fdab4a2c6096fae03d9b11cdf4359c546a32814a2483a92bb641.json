{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaypo\\\\OneDrive\\\\Desktop\\\\PalmRunLLC\\\\client\\\\src\\\\contexts\\\\StripeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StripeContext = /*#__PURE__*/createContext();\nexport const useStripe = () => {\n  _s();\n  const context = useContext(StripeContext);\n  if (!context) {\n    throw new Error('useStripe must be used within a StripeProvider');\n  }\n  return context;\n};\n_s(useStripe, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const StripeProvider = ({\n  children\n}) => {\n  _s2();\n  const [stripePromise, setStripePromise] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeStripe = async () => {\n      try {\n        // In production, this would come from environment variables\n        // For now, we'll use a placeholder that should be replaced\n        const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_stripe_publishable_key_here';\n        if (publishableKey && publishableKey !== 'pk_test_your_stripe_publishable_key_here') {\n          const stripe = await loadStripe(publishableKey);\n          setStripePromise(stripe);\n        } else {\n          console.warn('Stripe publishable key not configured. Please set REACT_APP_STRIPE_PUBLISHABLE_KEY in your environment variables.');\n        }\n      } catch (error) {\n        console.error('Failed to initialize Stripe:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeStripe();\n  }, []);\n  const value = {\n    stripePromise,\n    loading,\n    isStripeAvailable: !!stripePromise\n  };\n  return /*#__PURE__*/_jsxDEV(StripeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(StripeProvider, \"cVxynT3vhEuW7YrHf3qz1EZsHfU=\");\n_c = StripeProvider;\nvar _c;\n$RefreshReg$(_c, \"StripeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadStripe","jsxDEV","_jsxDEV","StripeContext","useStripe","_s","context","Error","StripeProvider","children","_s2","stripePromise","setStripePromise","loading","setLoading","initializeStripe","publishableKey","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","stripe","console","warn","error","value","isStripeAvailable","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jaypo/OneDrive/Desktop/PalmRunLLC/client/src/contexts/StripeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nconst StripeContext = createContext();\r\n\r\nexport const useStripe = () => {\r\n  const context = useContext(StripeContext);\r\n  if (!context) {\r\n    throw new Error('useStripe must be used within a StripeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const StripeProvider = ({ children }) => {\r\n  const [stripePromise, setStripePromise] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeStripe = async () => {\r\n      try {\r\n        // In production, this would come from environment variables\r\n        // For now, we'll use a placeholder that should be replaced\r\n        const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_stripe_publishable_key_here';\r\n        \r\n        if (publishableKey && publishableKey !== 'pk_test_your_stripe_publishable_key_here') {\r\n          const stripe = await loadStripe(publishableKey);\r\n          setStripePromise(stripe);\r\n        } else {\r\n          console.warn('Stripe publishable key not configured. Please set REACT_APP_STRIPE_PUBLISHABLE_KEY in your environment variables.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize Stripe:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeStripe();\r\n  }, []);\r\n\r\n  const value = {\r\n    stripePromise,\r\n    loading,\r\n    isStripeAvailable: !!stripePromise,\r\n  };\r\n\r\n  return (\r\n    <StripeContext.Provider value={value}>\r\n      {children}\r\n    </StripeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGT,UAAU,CAACM,aAAa,CAAC;EACzC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,SAAS;AAQtB,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA;QACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,gCAAgC,IAAI,0CAA0C;QAEjH,IAAIH,cAAc,IAAIA,cAAc,KAAK,0CAA0C,EAAE;UACnF,MAAMI,MAAM,GAAG,MAAMpB,UAAU,CAACgB,cAAc,CAAC;UAC/CJ,gBAAgB,CAACQ,MAAM,CAAC;QAC1B,CAAC,MAAM;UACLC,OAAO,CAACC,IAAI,CAAC,mHAAmH,CAAC;QACnI;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG;IACZb,aAAa;IACbE,OAAO;IACPY,iBAAiB,EAAE,CAAC,CAACd;EACvB,CAAC;EAED,oBACET,OAAA,CAACC,aAAa,CAACuB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAClCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACpB,GAAA,CAtCWF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}