{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{loadStripe}from'@stripe/stripe-js';import{jsx as _jsx}from\"react/jsx-runtime\";const StripeContext=/*#__PURE__*/createContext();export const useStripe=()=>{const context=useContext(StripeContext);if(!context){throw new Error('useStripe must be used within a StripeProvider');}return context;};export const StripeProvider=_ref=>{let{children}=_ref;const[stripePromise,setStripePromise]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initializeStripe=async()=>{try{// In production, this would come from environment variables\n// For now, we'll use a placeholder that should be replaced\nconst publishableKey=process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY||'pk_test_your_stripe_publishable_key_here';if(publishableKey&&publishableKey!=='pk_test_your_stripe_publishable_key_here'){const stripe=await loadStripe(publishableKey);setStripePromise(stripe);}else{console.warn('Stripe publishable key not configured. Please set REACT_APP_STRIPE_PUBLISHABLE_KEY in your environment variables.');}}catch(error){console.error('Failed to initialize Stripe:',error);}finally{setLoading(false);}};initializeStripe();},[]);const value={stripePromise,loading,isStripeAvailable:!!stripePromise};return/*#__PURE__*/_jsx(StripeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadStripe","jsx","_jsx","StripeContext","useStripe","context","Error","StripeProvider","_ref","children","stripePromise","setStripePromise","loading","setLoading","initializeStripe","publishableKey","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","stripe","console","warn","error","value","isStripeAvailable","Provider"],"sources":["C:/Users/jaypo/OneDrive/Desktop/PalmRunLLC/client/src/contexts/StripeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nconst StripeContext = createContext();\r\n\r\nexport const useStripe = () => {\r\n  const context = useContext(StripeContext);\r\n  if (!context) {\r\n    throw new Error('useStripe must be used within a StripeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const StripeProvider = ({ children }) => {\r\n  const [stripePromise, setStripePromise] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeStripe = async () => {\r\n      try {\r\n        // In production, this would come from environment variables\r\n        // For now, we'll use a placeholder that should be replaced\r\n        const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_stripe_publishable_key_here';\r\n        \r\n        if (publishableKey && publishableKey !== 'pk_test_your_stripe_publishable_key_here') {\r\n          const stripe = await loadStripe(publishableKey);\r\n          setStripePromise(stripe);\r\n        } else {\r\n          console.warn('Stripe publishable key not configured. Please set REACT_APP_STRIPE_PUBLISHABLE_KEY in your environment variables.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize Stripe:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeStripe();\r\n  }, []);\r\n\r\n  const value = {\r\n    stripePromise,\r\n    loading,\r\n    isStripeAvailable: !!stripePromise,\r\n  };\r\n\r\n  return (\r\n    <StripeContext.Provider value={value}>\r\n      {children}\r\n    </StripeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,UAAU,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,aAAa,cAAGP,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAQ,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,aAAa,CAAC,CACzC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF;AACA;AACA,KAAM,CAAAC,cAAc,CAAGC,OAAO,CAACC,GAAG,CAACC,gCAAgC,EAAI,0CAA0C,CAEjH,GAAIH,cAAc,EAAIA,cAAc,GAAK,0CAA0C,CAAE,CACnF,KAAM,CAAAI,MAAM,CAAG,KAAM,CAAAnB,UAAU,CAACe,cAAc,CAAC,CAC/CJ,gBAAgB,CAACQ,MAAM,CAAC,CAC1B,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAAC,mHAAmH,CAAC,CACnI,CACF,CAAE,MAAOC,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACRT,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAAK,CAAG,CACZb,aAAa,CACbE,OAAO,CACPY,iBAAiB,CAAE,CAAC,CAACd,aACvB,CAAC,CAED,mBACER,IAAA,CAACC,aAAa,CAACsB,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAd,QAAA,CAClCA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}