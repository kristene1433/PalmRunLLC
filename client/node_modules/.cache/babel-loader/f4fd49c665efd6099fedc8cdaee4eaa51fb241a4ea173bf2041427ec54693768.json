{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));// Set up axios defaults\nuseEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);}else{delete axios.defaults.headers.common['Authorization'];}},[token]);// Check if user is authenticated on app load\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{const response=await axios.get('/api/auth/verify');if(response.data.valid){setUser(response.data.user);}else{localStorage.removeItem('token');setToken(null);}}catch(error){console.error('Auth verification error:',error);localStorage.removeItem('token');setToken(null);}}setLoading(false);};checkAuth();},[token]);// Login function\nconst login=async(email,password)=>{try{const response=await axios.post('/api/auth/login',{email,password});const{token:newToken,user:userData}=response.data;localStorage.setItem('token',newToken);setToken(newToken);setUser(userData);toast.success('Login successful!');return{success:true,user:userData};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed. Please try again.';toast.error(message);return{success:false,error:message};}};// Register function\nconst register=async(email,password)=>{try{const response=await axios.post('/api/auth/register',{email,password});const{token:newToken,user:newUser}=response.data;localStorage.setItem('token',newToken);setToken(newToken);setUser(newUser);toast.success('Registration successful! Welcome to Palm Run LLC.');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Registration failed. Please try again.';toast.error(message);return{success:false,error:message};}};// Logout function\nconst logout=async()=>{try{if(token){await axios.post('/api/auth/logout');}}catch(error){console.error('Logout error:',error);}finally{localStorage.removeItem('token');setToken(null);setUser(null);toast.success('Logged out successfully');}};// Update user profile\nconst updateProfile=async profileData=>{try{const response=await axios.put('/api/auth/profile',profileData);const updatedUser=response.data.user;setUser(updatedUser);toast.success('Profile updated successfully');return{success:true,user:updatedUser};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Profile update failed. Please try again.';toast.error(message);return{success:false,error:message};}};// Change password\nconst changePassword=async(currentPassword,newPassword)=>{try{await axios.put('/api/auth/change-password',{currentPassword,newPassword});toast.success('Password changed successfully');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Password change failed. Please try again.';toast.error(message);return{success:false,error:message};}};// Refresh user data\nconst refreshUser=async()=>{try{const response=await axios.get('/api/auth/profile');setUser(response.data.user);return{success:true,user:response.data.user};}catch(error){console.error('User refresh error:',error);return{success:false,error:'Failed to refresh user data'};}};const value={user,loading,token,login,register,logout,updateProfile,changePassword,refreshUser,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","concat","checkAuth","response","get","data","valid","removeItem","error","console","login","email","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","updatedUser","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","refreshUser","value","isAuthenticated","Provider"],"sources":["C:/Users/jaypo/OneDrive/Desktop/PalmRunLLC/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/verify');\r\n          if (response.data.valid) {\r\n            setUser(response.data.user);\r\n          } else {\r\n            localStorage.removeItem('token');\r\n            setToken(null);\r\n          }\r\n        } catch (error) {\r\n          console.error('Auth verification error:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed. Please try again.';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', { email, password });\r\n      const { token: newToken, user: newUser } = response.data;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      \r\n      toast.success('Registration successful! Welcome to Palm Run LLC.');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed. Please try again.';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      if (token) {\r\n        await axios.post('/api/auth/logout');\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put('/api/auth/profile', profileData);\r\n      const updatedUser = response.data.user;\r\n      \r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n      return { success: true, user: updatedUser };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed. Please try again.';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.put('/api/auth/change-password', { currentPassword, newPassword });\r\n      toast.success('Password changed successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Password change failed. Please try again.';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Refresh user data\r\n  const refreshUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/auth/profile');\r\n      setUser(response.data.user);\r\n      return { success: true, user: response.data.user };\r\n    } catch (error) {\r\n      console.error('User refresh error:', error);\r\n      return { success: false, error: 'Failed to refresh user data' };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    refreshUser,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}